{"version":3,"sources":["Leaderboard.js"],"names":["rootObjectName","window","__GRN","ready","Leaderboard","__init","document","getElementById","fetch","cache","then","handleOnLeaderboardFetchSuccess","catch","handleOnLeaderboardFetchFailure","bind","this","response","text","responseJSON","JSON","parse","awaitModulePrepared","Debug","writeConsoleMessage","LOG_LEVEL_INFO","rowData","row","ranking","name","mmr","TBody","querySelector","i","j","length","appendChild","createElement","classList","add","steamid","innerHTML","toString","toFixed","toLocaleString","error","LOG_LEVEL_ERROR","writeConsoleObject","modulePrepared","moduleReady"],"mappings":"CAAE,WACE,IAAIA,EAAiBC,OAAOC,MAE5BD,OAAOD,GAAgBG,MAAM,WACzBF,OAAOD,GAAgBI,YAAe,WAGlC,OACIC,OAAQ,WACAC,SAASC,eAAe,mBAExBN,OAAOO,MANK,qCAORC,MAAO,YAENC,KAAKT,OAAOD,GAAgBI,YAAYO,iCACxCC,MAAMX,OAAOD,GAAgBI,YAAYS,kCAEpDC,KAAKC,MAEPJ,gCAAiC,SAASK,GAEtCA,EAASC,OAAOP,KAAK,SAASQ,GAS1BA,EAA0C,iBAAnB,EAA+BC,KAAKC,MAAMF,GAAgBA,EAEjFjB,OAAOD,GAAgBqB,oBAAoB,QAAS,WAChDpB,OAAOD,GAAgBsB,MAAMC,oBAAoB,oCAAqC,cAAetB,OAAOD,GAAgBsB,MAAME,kBA2BtI,IAxBA,IACiCC,EACzBC,EACAC,EACAC,EACAC,EALJC,EAAQxB,SAASyB,cAAc,yBAqB/BC,EAAI,EACJC,EAAIf,EAAagB,OAEbF,EAAIC,EAAGD,IACXF,EAAMK,aAxBuBV,EAwBOP,EAAac,GAvB7CN,OAAAA,EACAC,OAAAA,EACAC,OAAAA,EACAC,OAAAA,EAHAH,EAAMpB,SAAS8B,cAAc,MAC7BT,EAAUrB,SAAS8B,cAAc,MACjCR,EAAOtB,SAAS8B,cAAc,MAC9BP,EAAMvB,SAAS8B,cAAc,MAEjCV,EAAIW,UAAUC,IAAI,UAAYb,EAAQc,SAEtCZ,EAAQa,UAAYf,EAAQE,QAAQc,WACpCb,EAAKY,UAAYf,EAAQG,KAAKa,WAC9BZ,EAAIW,UAAYf,EAAQI,IAAIa,QAAQ,GAAGC,iBAEvCjB,EAAIS,YAAYR,GAChBD,EAAIS,YAAYP,GAChBF,EAAIS,YAAYN,GAETH,IAWXpB,SAASyB,cAAc,aAAaM,UAAUC,IAAI,qBAElDrC,OAAOD,GAAgBqB,oBAAoB,QAAS,WAChDpB,OAAOD,GAAgBsB,MAAMC,oBAAoB,sBAAuB,cAAetB,OAAOD,GAAgBsB,MAAME,oBAEzHZ,MAAMX,OAAOD,GAAgBI,YAAYS,kCAGhDA,gCAAiC,SAAS+B,GACtC3C,OAAOD,GAAgBqB,oBAAoB,QAAS,SAASuB,GACzD3C,OAAOD,GAAgBsB,MAAMC,oBAAoB,uEAAwE,cAAetB,OAAOD,GAAgBsB,MAAMuB,iBACrK5C,OAAOD,GAAgBsB,MAAMwB,mBAAmBF,EAAO,cAAe3C,OAAOD,GAAgBsB,MAAMuB,kBACrG/B,KAAKC,KAAM6B,MAxEY,GA6ErC3C,OAAOD,GAAgB+C,eAAe,eACtC9C,OAAOD,GAAgBgD,YAAY/C,OAAOD,GAAgBI,YAAYC,UAlF7E","file":"Leaderboard.js","sourcesContent":["!(function() {\n    var rootObjectName = window.__GRN;\n\n    window[rootObjectName].ready(function() {\n        window[rootObjectName].Leaderboard = (function () {\n            var leaderboardAPIURI = 'https://chrisinajar.com:4969/top/';\n\n            return {\n                __init: function() {\n                    if (document.getElementById('OAALeaderboard')) {\n                        // TODO: LCache this or put the API behind a short life CDN to protect it\n                        window.fetch(leaderboardAPIURI, {\n                            cache: \"default\",\n                        })\n                            .then(window[rootObjectName].Leaderboard.handleOnLeaderboardFetchSuccess)\n                            .catch(window[rootObjectName].Leaderboard.handleOnLeaderboardFetchFailure);\n                    }\n                }.bind(this),\n\n                handleOnLeaderboardFetchSuccess: function(response) {\n                    // TODO: Handle a loader on this!\n                    response.text().then(function(responseJSON) {\n                        /**\n                         * @type {{\n                         *   steamid: string,\n                         *   mmr:     Number,\n                         *   ranking: int,\n                         *   name:    string,\n                         * []}} responseJSON\n                         */\n                        responseJSON = ((typeof(responseJSON) === 'string') ? JSON.parse(responseJSON) : responseJSON);\n\n                        window[rootObjectName].awaitModulePrepared('Debug', function() {\n                            window[rootObjectName].Debug.writeConsoleMessage('Response body converted to object', 'Leaderboard', window[rootObjectName].Debug.LOG_LEVEL_INFO);\n                        });\n\n                        var TBody = document.querySelector('#OAALeaderboard tbody');\n                        var constructTableRow = function(rowData) {\n                            var row = document.createElement('tr');\n                            var ranking = document.createElement('td');\n                            var name = document.createElement('td');\n                            var mmr = document.createElement('td');\n\n                            row.classList.add('OAAS32_' + rowData.steamid); // Used to highlight the current user if we happen to have a Steam ID to look up\n\n                            ranking.innerHTML = rowData.ranking.toString();\n                            name.innerHTML = rowData.name.toString();\n                            mmr.innerHTML = rowData.mmr.toFixed(2).toLocaleString(); // Format to decimal with 2 digits precision and localise\n\n                            row.appendChild(ranking);\n                            row.appendChild(name);\n                            row.appendChild(mmr);\n\n                            return row;\n                        };\n\n                        // At this point, the response SHOULD be an array\n                        var i = 0;\n                        var j = responseJSON.length;\n\n                        for (i; i < j; i++) {\n                            TBody.appendChild(constructTableRow(responseJSON[i]));\n                        }\n\n                        document.querySelector('body>main').classList.add('leaderboardLoaded');\n\n                        window[rootObjectName].awaitModulePrepared('Debug', function() {\n                            window[rootObjectName].Debug.writeConsoleMessage('Leaderboard written', 'Leaderboard', window[rootObjectName].Debug.LOG_LEVEL_INFO);\n                        });\n                    }).catch(window[rootObjectName].Leaderboard.handleOnLeaderboardFetchFailure);\n                },\n\n                handleOnLeaderboardFetchFailure: function(error) {\n                    window[rootObjectName].awaitModulePrepared('Debug', function(error) {\n                        window[rootObjectName].Debug.writeConsoleMessage('An unexpected error occurred while trying to fetch leaderboard data!', 'Leaderboard', window[rootObjectName].Debug.LOG_LEVEL_ERROR);\n                        window[rootObjectName].Debug.writeConsoleObject(error, 'Leaderboard', window[rootObjectName].Debug.LOG_LEVEL_ERROR);\n                    }.bind(this, error))\n                },\n            }\n        }());\n\n        window[rootObjectName].modulePrepared('Leaderboard');\n        window[rootObjectName].moduleReady(window[rootObjectName].Leaderboard.__init);\n    });\n}());\n"]}