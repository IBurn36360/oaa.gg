{"version":3,"sources":["SteamAuth.js"],"names":["rootObjectName","window","__GRN","ready","SteamAuth","userSteam64","userSteamProfileData","onAuthenticatedCallbacks","hasBeenAuthenticated","handleProfileDataForUserAvailable","userDataString","JSON","parse","$steamProfile","document","getElementById","innerHTML","statusCode","$OAADownloadLink","createElement","classList","add","setAttribute","appendChild","steamid","profile","$nameContainer","$unrankedMMR","$rankedMMR","$MMRContainer","$unrankedMMRNumber","$rankedMMRNumber","name","replace","unrankedMMR","rankedMMR","avatar","$userAvatar","setAttrinute","remove","awaitModulePrepared","Debug","writeConsoleMessage","LOG_LEVEL_INFO","i","j","length","handleRunCallback","handleProfileDataForUserUnableToBeResolved","error","LOG_LEVEL_ERROR","writeConsoleObject","bind","this","handleUpdateNavToRequiresAuthentication","querySelector","handleFetchUserProfileData","localStorage","setItem","Date","now","userDataStr","getItem","parts","split","Number","splice","join","fetch","currentUserSteam32","cache","then","response","text","responseText","catch","handleUpdateNavToAuthenticated","__init","encodeURIComponent","location","origin","pathname","steamAuthChallenge","indexOf","steamAuthSet","identity","URL","searchParamValue","e","registerOnAuthenticatedCallback","callback","push","baseInt","subtInt","resultInt","steam64chars","reverse","steamTConstChars","steam32Chars","carry","toString","currentUserSteam64","modulePrepared","moduleReady"],"mappings":"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","file":"SteamAuth.js","sourcesContent":["!(function() {\n    var rootObjectName = window.__GRN;\n\n    window[rootObjectName].ready(function() {\n        window[rootObjectName].SteamAuth = (function () {\n            var userSteam64              = 0;\n            var userSteamProfileData     = null;\n            var onAuthenticatedCallbacks = [];\n            var hasBeenAuthenticated     = false;\n\n            var handleUpdateNavToAuthenticated = function() {\n                if (!userSteam64) {\n                    handleUpdateNavToRequiresAuthentication();\n                }\n\n                window[rootObjectName].awaitModulePrepared('Debug', function() {\n                    window[rootObjectName].Debug.writeConsoleMessage('User is currently authenticated', 'SteamAuth', window[rootObjectName].Debug.LOG_LEVEL_INFO);\n                });\n\n                hasBeenAuthenticated = true;\n\n                // Now build the profile display for the user and do highlighting in the DOM\n                var userDataStr = window.localStorage.getItem('OAAGGSUP');\n\n                if (userDataStr) {\n                    var parts = userDataStr.split(':');\n                    var expiration = Number(parts.splice(0, 1));\n\n                    if (expiration > Date.now()) {\n                        handleProfileDataForUserAvailable(parts.join(':'));\n\n                        return;\n                    }\n                }\n\n                // If we got here...userdata doesn't exist, so fetch it\n                window.fetch('https://chrisinajar.com:4969/users/' + window[rootObjectName].SteamAuth.currentUserSteam32, {\n                    cache: \"default\",\n                })\n                    .then(function(response) {\n                        response.text()\n                            .then(function(responseText) {\n                                // Cached for 5 minutes at a time\n                                window.localStorage.setItem('OAAGGSUP', (Date.now() + 300000) + ':' + responseText);\n\n                                handleProfileDataForUserAvailable(responseText);\n                            })\n                            .catch(handleProfileDataForUserUnableToBeResolved);\n                    })\n                    .catch(handleProfileDataForUserUnableToBeResolved);\n            };\n\n            var handleProfileDataForUserAvailable = function(userDataString) {\n                // Make a workable object here\n                userSteamProfileData = JSON.parse(userDataString);\n\n                /**\n                 * @var {HTMLElement} $steamProfile\n                 */\n                var $steamProfile = document.getElementById('steamProfile');\n\n                // In the event this gets run again (Say we are testing, or someone puts something in there as a placeholder etc.) Clear out this element quickly\n                $steamProfile.innerHTML = '';\n\n                // TODO: Populate DOM\n                if (userSteamProfileData && userSteamProfileData.statusCode && (userSteamProfileData.statusCode === 404)) {\n                    // Tell the user to play and maybe link the steam workshop page here?\n                    var $OAADownloadLink = document.createElement('a');\n\n                    $OAADownloadLink.classList.add('OAADownloadLink');\n\n                    $OAADownloadLink.setAttribute('target', '_blank');\n                    $OAADownloadLink.setAttribute('href', 'https://steamcommunity.com/sharedfiles/filedetails/?id=881541807');\n                    $OAADownloadLink.innerHTML = 'Subscribe<br />to play';\n\n                    $steamProfile.appendChild($OAADownloadLink);\n                } else if (userSteamProfileData && userSteamProfileData.steamid && userSteamProfileData.profile) {\n                    // Build the nav for your MMR\n                    var $nameContainer = document.createElement('div');\n                    var $unrankedMMR = document.createElement('div');\n                    var $rankedMMR = document.createElement('div');\n                    var $MMRContainer = document.createElement('div');\n\n                    var $unrankedMMRNumber = document.createElement('span');\n                    var $rankedMMRNumber = document.createElement('span');\n\n                    $nameContainer.innerHTML = userSteamProfileData.profile.name.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n\n                    $unrankedMMRNumber.innerHTML = userSteamProfileData.unrankedMMR;\n                    $rankedMMRNumber.innerHTML = userSteamProfileData.rankedMMR;\n\n                    $unrankedMMR.appendChild($unrankedMMRNumber);\n                    $rankedMMRNumber.appendChild($rankedMMRNumber);\n\n                    $MMRContainer.appendChild($unrankedMMR);\n                    $MMRContainer.appendChild($rankedMMR);\n\n                    $steamProfile.appendChild($rankedMMRNumber);\n\n                    $steamProfile.appendChild($nameContainer);\n                    $steamProfile.appendChild($MMRContainer);\n\n                    // Make their avatar available in layout?\n                    if (userSteamProfileData.profile.avatar) {\n                        var $userAvatar = document.createElement('img');\n\n                        $userAvatar.setAttrinute('src', userSteamProfileData.profile.avatar);\n\n                        $steamProfile.appendChild($userAvatar);\n                    }\n                } else {\n                    // TODO: Catch?\n                }\n\n                $steamProfile.classList.remove('loading');\n                $steamProfile.classList.add('loaded');\n\n                window[rootObjectName].awaitModulePrepared('Debug', function() {\n                    window[rootObjectName].Debug.writeConsoleMessage('Running onAuthenticated callbacks', 'SteamAuth', window[rootObjectName].Debug.LOG_LEVEL_INFO);\n                });\n\n                var i = 0;\n                var j = onAuthenticatedCallbacks.length;\n\n                for (i; i < j; i++) {\n                    window[rootObjectName].handleRunCallback(onAuthenticatedCallbacks[i]);\n                }\n            };\n\n            var handleProfileDataForUserUnableToBeResolved = function(error) {\n                window[rootObjectName].awaitModulePrepared('Debug', function(error) {\n                    window[rootObjectName].Debug.writeConsoleMessage('User profile data was unable to be fetched!', 'SteamAuth', window[rootObjectName].Debug.LOG_LEVEL_ERROR);\n                    window[rootObjectName].Debug.writeConsoleObject(error, 'SteamAuth', window[rootObjectName].Debug.LOG_LEVEL_ERROR);\n                }.bind(this, error));\n            };\n\n            var handleUpdateNavToRequiresAuthentication = function() {\n                window[rootObjectName].awaitModulePrepared('Debug', function() {\n                    window[rootObjectName].Debug.writeConsoleMessage('User is not currently authenticated', 'SteamAuth', window[rootObjectName].Debug.LOG_LEVEL_INFO);\n                });\n\n                var authButton = document.querySelector('body>nav .steamAuth');\n\n                authButton.classList.remove('loading');\n\n                window[rootObjectName].awaitModulePrepared('Debug', function() {\n                    window[rootObjectName].Debug.writeConsoleMessage('Bound interactions for nav button for authentication', 'SteamAuth', window[rootObjectName].Debug.LOG_LEVEL_INFO);\n                });\n            };\n\n            var handleFetchUserProfileData = function() {\n                // Cached for 1 week at a time\n                // TODO: Need to make a clear case for this information!\n                window.localStorage.setItem('OAAGGS64', (Date.now() + 604800000) + ':' + userSteam64);\n\n                handleUpdateNavToAuthenticated();\n            };\n\n            return {\n                __init: function() {\n                    window[rootObjectName].awaitModulePrepared('URL', function() {\n                        // TL`DR, this sets up a browser-side 'session' flow where the response can be read from the URL\n                        document.getElementById('steamAuth').setAttribute(\n                            'href',\n                            'https://steamcommunity.com/openid/login?' +\n                                'openid.claimed_id=' + encodeURIComponent('http://specs.openid.net/auth/2.0/identifier_select') + '&' +\n                                'openid.identity='   + encodeURIComponent('http://specs.openid.net/auth/2.0/identifier_select') + '&' +\n                                'openid.mode='       + encodeURIComponent('checkid_setup') +                                      '&' +\n                                'openid.ns='         + encodeURIComponent('http://specs.openid.net/auth/2.0') +                   '&' +\n                                'openid.realm='      + encodeURIComponent(window.location.origin) +                               '&' +\n                                'openid.return_to='  + encodeURIComponent(window.location.origin + window.location.pathname)\n                        );\n\n                        // FIRST, check to see if our LS store has a valid entry that has not expired (We are going to locally store the Steam64 for 1 week)\n                        try {\n                            var steamAuthChallenge = window.localStorage.getItem('OAAGGS64');\n\n                            // Do we have a valid and non-expired Steam64 in cache?\n                            if (!steamAuthChallenge || (steamAuthChallenge.indexOf(':') === -1)) {\n                                // Check our response URL...we might already have this data available\n                                var identity = window[rootObjectName].URL.searchParamValue('openid.identity');\n\n                                if (identity && (identity = identity.replace(/^https:\\/\\/steamcommunity.com\\/openid\\/id\\//, ''))) {\n                                    userSteam64 = identity;\n\n                                    handleFetchUserProfileData();\n                                } else {\n                                    handleUpdateNavToRequiresAuthentication();\n                                }\n                            } else {\n                                var steamAuthSet = steamAuthChallenge.split(':');\n\n                                if (Number(steamAuthSet[0]) > Date.now()) {\n                                    userSteam64 = steamAuthSet[1];\n\n                                    handleFetchUserProfileData();\n                                } else {\n                                    handleUpdateNavToRequiresAuthentication();\n                                }\n                            }\n                        } catch (e) {\n                            // TODO: Handle private browsing mode maybe?  IOS throws an exception here if we are in private browsing mode\n                        }\n                    });\n                }.bind(this),\n\n                registerOnAuthenticatedCallback: function(callback) {\n                    if (hasBeenAuthenticated) {\n                        window[rootObjectName].handleRunCallback(callback);\n                    } else {\n                        onAuthenticatedCallbacks.push(callback);\n                    }\n                }.bind(this),\n\n                get currentUserSteam32() {\n                    // Split the string into char arrays sop we can do the math manually (Doing the plan math will always fail...)\n                    var steam64chars     = userSteam64.split('').reverse();\n                    var steamTConstChars = '76561197960265728'.split('').reverse();\n                    var steam32Chars     = [];\n\n                    var i = 0;\n                    var j = steam64chars.length;\n\n                    var carry = false;\n                    var baseInt;\n                    var subtInt;\n                    var resultInt;\n\n                    // TODO: Maybe there is a case where the 64 is less than the translation constant?\n                    for (i; i < j; i++) {\n                        baseInt = Number(steam64chars[i]);\n                        subtInt = Number(steamTConstChars[i]);\n\n                        // Are we carrying a number from the last operation?\n                        if (carry) {\n                            baseInt = (baseInt - 1);\n                        }\n\n                        carry = false;\n\n                        resultInt = baseInt - subtInt;\n\n                        if (resultInt < 0) {\n                            resultInt = (resultInt + 10);\n\n                            carry = true;\n                        }\n\n                        steam32Chars.push(resultInt.toString());\n                    }\n\n                    return steam32Chars.reverse().join('').replace(/^[0]+/, '');\n                },\n\n                get currentUserSteam64() {\n                    return userSteam64;\n                },\n            };\n        }());\n\n        window[rootObjectName].modulePrepared('SteamAuth');\n        window[rootObjectName].moduleReady(window[rootObjectName].SteamAuth.__init);\n    });\n}());\n"]}