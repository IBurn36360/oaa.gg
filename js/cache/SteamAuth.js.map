{"version":3,"sources":["SteamAuth.js"],"names":["rootObjectName","window","__GRN","ready","SteamAuth","userSteam64","onAuthenticatedCallbacks","hasBeenAuthenticated","handleProfileDataForUserAvailable","userDataString","JSON","parse","awaitModulePrepared","Debug","writeConsoleMessage","LOG_LEVEL_INFO","i","j","length","handleRunCallback","handleProfileDataForUserUnableToBeResolved","error","LOG_LEVEL_ERROR","writeConsoleObject","bind","this","handleUpdateNavToRequiresAuthentication","document","querySelector","classList","remove","handleFetchUserProfileData","localStorage","setItem","Date","now","userDataStr","getItem","parts","split","Number","splice","join","fetch","currentUserSteam32","cache","then","response","text","responseText","catch","handleUpdateNavToAuthenticated","__init","getElementById","setAttribute","encodeURIComponent","location","origin","pathname","steamAuthChallenge","indexOf","steamAuthSet","identity","URL","searchParamValue","replace","e","registerOnAuthenticatedCallback","callback","push","toString","currentUserSteam64","modulePrepared","moduleReady"],"mappings":"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","file":"SteamAuth.js","sourcesContent":["!(function() {\n    var rootObjectName = window.__GRN;\n\n    window[rootObjectName].ready(function() {\n        window[rootObjectName].SteamAuth = (function () {\n            var userSteam64              = 0;\n            var userSteamProfileData     = null;\n            var onAuthenticatedCallbacks = [];\n            var hasBeenAuthenticated     = false;\n\n            var handleUpdateNavToAuthenticated = function() {\n                if (!userSteam64) {\n                    handleUpdateNavToRequiresAuthentication();\n                }\n\n                window[rootObjectName].awaitModulePrepared('Debug', function() {\n                    window[rootObjectName].Debug.writeConsoleMessage('User is currently authenticated', 'SteamAuth', window[rootObjectName].Debug.LOG_LEVEL_INFO);\n                });\n\n                hasBeenAuthenticated = true;\n\n                // Now build the profile display for the user and do highlighting in the DOM\n                var userDataStr = window.localStorage.getItem('OAAGGSUP');\n\n                if (userDataStr) {\n                    var parts = userDataStr.split(':');\n                    var expiration = Number(parts.splice(0, 1));\n\n                    if (expiration > Date.now()) {\n                        handleProfileDataForUserAvailable(parts.join(':'));\n\n                        return;\n                    }\n                }\n\n                // If we got here...userdata doesn't exist, so fetch it\n                window.fetch('https://chrisinajar.com:4969/users/' + window[rootObjectName].SteamAuth.currentUserSteam32, {\n                    cache: \"default\",\n                })\n                    .then(function(response) {\n                        response.text()\n                            .then(function(responseText) {\n                                // Cached for 5 minutes at a time\n                                window.localStorage.setItem('OAAGGSUP', (Date.now() + 300000) + ':' + responseText);\n\n                                handleProfileDataForUserAvailable(responseText);\n                            })\n                            .catch(handleProfileDataForUserUnableToBeResolved);\n                    })\n                    .catch(handleProfileDataForUserUnableToBeResolved);\n            };\n\n            var handleProfileDataForUserAvailable = function(userDataString) {\n                // Make a workable object here\n                userSteamProfileData = JSON.parse(userDataString);\n\n                // TODO: Populate DOM\n\n                window[rootObjectName].awaitModulePrepared('Debug', function() {\n                    window[rootObjectName].Debug.writeConsoleMessage('Running onAuthenticated callbacks', 'SteamAuth', window[rootObjectName].Debug.LOG_LEVEL_INFO);\n                });\n\n                var i = 0;\n                var j = onAuthenticatedCallbacks.length;\n\n                for (i; i < j; i++) {\n                    window[rootObjectName].handleRunCallback(onAuthenticatedCallbacks[i]);\n                }\n            };\n\n            var handleProfileDataForUserUnableToBeResolved = function(error) {\n                window[rootObjectName].awaitModulePrepared('Debug', function(error) {\n                    window[rootObjectName].Debug.writeConsoleMessage('User profile data was unable to be fetched!', 'SteamAuth', window[rootObjectName].Debug.LOG_LEVEL_ERROR);\n                    window[rootObjectName].Debug.writeConsoleObject(error, 'SteamAuth', window[rootObjectName].Debug.LOG_LEVEL_ERROR);\n                }.bind(this, error));\n            };\n\n            var handleUpdateNavToRequiresAuthentication = function() {\n                window[rootObjectName].awaitModulePrepared('Debug', function() {\n                    window[rootObjectName].Debug.writeConsoleMessage('User is not currently authenticated', 'SteamAuth', window[rootObjectName].Debug.LOG_LEVEL_INFO);\n                });\n\n                var authButton = document.querySelector('body>nav .steamAuth');\n\n                authButton.classList.remove('loading');\n\n                window[rootObjectName].awaitModulePrepared('Debug', function() {\n                    window[rootObjectName].Debug.writeConsoleMessage('Bound interactions for nav button for authentication', 'SteamAuth', window[rootObjectName].Debug.LOG_LEVEL_INFO);\n                });\n            };\n\n            var handleFetchUserProfileData = function() {\n                // Cached for 1 week at a time\n                // TODO: Need to make a clear case for this information!\n                window.localStorage.setItem('OAAGGS64', (Date.now() + 604800000) + ':' + userSteam64);\n\n                handleUpdateNavToAuthenticated();\n            };\n\n            return {\n                __init: function() {\n                    window[rootObjectName].awaitModulePrepared('URL', function() {\n                        // TL`DR, this sets up a browser-side 'session' flow where the response can be read from the URL\n                        document.getElementById('steamAuth').setAttribute(\n                            'href',\n                            'https://steamcommunity.com/openid/login?' +\n                                'openid.claimed_id=' + encodeURIComponent('http://specs.openid.net/auth/2.0/identifier_select') + '&' +\n                                'openid.identity='   + encodeURIComponent('http://specs.openid.net/auth/2.0/identifier_select') + '&' +\n                                'openid.mode='       + encodeURIComponent('checkid_setup') +                                      '&' +\n                                'openid.ns='         + encodeURIComponent('http://specs.openid.net/auth/2.0') +                   '&' +\n                                'openid.realm='      + encodeURIComponent(window.location.origin) +                               '&' +\n                                'openid.return_to='  + encodeURIComponent(window.location.origin + window.location.pathname)\n                        );\n\n                        // FIRST, check to see if our LS store has a valid entry that has not expired (We are going to locally store the Steam64 for 1 week)\n                        try {\n                            var steamAuthChallenge = window.localStorage.getItem('OAAGGS64');\n\n                            // Do we have a valid and non-expired Steam64 in cache?\n                            if (!steamAuthChallenge || (!steamAuthChallenge.indexOf(':') == -1)) {\n                                // Check our response URL...we might already have this data available\n                                var identity = window[rootObjectName].URL.searchParamValue('openid.identity');\n\n                                if (identity && (identity = identity.replace(/^https:\\/\\/steamcommunity.com\\/openid\\/id\\//, ''))) {\n                                    userSteam64 = identity;\n\n                                    handleFetchUserProfileData();\n                                } else {\n                                    handleUpdateNavToRequiresAuthentication();\n                                }\n                            } else {\n                                var steamAuthSet = steamAuthChallenge.split(':');\n\n                                if (Number(steamAuthSet[0]) > Date.now()) {\n                                    userSteam64 = steamAuthSet[1];\n\n                                    handleUpdateNavToRequiresAuthentication();\n                                } else {\n                                    handleFetchUserProfileData();\n                                }\n                            }\n                        } catch (e) {\n                            // TODO: Handle private browsing mode maybe?  IOS throws an exception here if we are in private browsing mode\n                        }\n                    });\n                }.bind(this),\n\n                registerOnAuthenticatedCallback: function(callback) {\n                    if (hasBeenAuthenticated) {\n                        window[rootObjectName].handleRunCallback(callback);\n                    } else {\n                        onAuthenticatedCallbacks.push(callback);\n                    }\n                }.bind(this),\n\n                get currentUserSteam32() {\n                    return (Number(userSteam64) - 76561197960265728).toString();\n                },\n\n                get currentUserSteam64() {\n                    return userSteam64;\n                },\n            };\n        }());\n\n        window[rootObjectName].modulePrepared('SteamAuth');\n        window[rootObjectName].moduleReady(window[rootObjectName].SteamAuth.__init);\n    });\n}());\n"]}