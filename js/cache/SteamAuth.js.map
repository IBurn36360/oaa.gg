{"version":3,"sources":["SteamAuth.js"],"names":["rootObjectName","window","__GRN","ready","SteamAuth","userSteam64","userSteamProfileData","onAuthenticatedCallbacks","hasBeenAuthenticated","handleProfileDataForUserAvailable","userDataString","JSON","parse","awaitModulePrepared","Debug","writeConsoleMessage","LOG_LEVEL_INFO","writeConsoleObject","bind","this","$steamProfile","document","getElementById","innerHTML","statusCode","$OAADownloadLink","createElement","classList","add","setAttribute","appendChild","steamid","profile","$nameContainer","$unrankedMMR","$rankedMMR","$MMRContainer","$unrankedMMRNumber","$rankedMMRNumber","name","replace","unrankedMMR","rankedMMR","avatar","$userAvatar","steamAuthElements","querySelectorAll","i","j","length","remove","items","currentUserSteam32","handleRunCallback","handleProfileDataForUserUnableToBeResolved","error","LOG_LEVEL_ERROR","handleUpdateNavToRequiresAuthentication","querySelector","handleFetchUserProfileData","localStorage","setItem","Date","now","userDataStr","getItem","parts","split","Number","splice","join","fetch","cache","then","response","text","responseText","catch","handleUpdateNavToAuthenticated","__init","encodeURIComponent","location","origin","pathname","steamAuthChallenge","indexOf","steamAuthSet","identity","URL","searchParamValue","e","registerOnAuthenticatedCallback","callback","push","baseInt","subtInt","resultInt","steam64chars","reverse","steamTConstChars","steam32Chars","carry","toString","currentUserSteam64","modulePrepared","moduleReady"],"mappings":"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","file":"SteamAuth.js","sourcesContent":["!(function() {\n    var rootObjectName = window.__GRN;\n\n    window[rootObjectName].ready(function() {\n        window[rootObjectName].SteamAuth = (function () {\n            var userSteam64              = 0;\n            var userSteamProfileData     = null;\n            var onAuthenticatedCallbacks = [];\n            var hasBeenAuthenticated     = false;\n\n            var handleUpdateNavToAuthenticated = function() {\n                if (!userSteam64) {\n                    handleUpdateNavToRequiresAuthentication();\n                }\n\n                window[rootObjectName].awaitModulePrepared('Debug', function() {\n                    window[rootObjectName].Debug.writeConsoleMessage('User is currently authenticated', 'SteamAuth', window[rootObjectName].Debug.LOG_LEVEL_INFO);\n                });\n\n                hasBeenAuthenticated = true;\n\n                // Now build the profile display for the user and do highlighting in the DOM\n                var userDataStr = window.localStorage.getItem('OAAGGSUP');\n\n                if (userDataStr) {\n                    var parts = userDataStr.split(':');\n                    var expiration = Number(parts.splice(0, 1));\n\n                    if (expiration > Date.now()) {\n                        handleProfileDataForUserAvailable(parts.join(':'));\n\n                        return;\n                    }\n                }\n\n                // If we got here...userdata doesn't exist, so fetch it\n                window.fetch('https://chrisinajar.com:4969/users/' + window[rootObjectName].SteamAuth.currentUserSteam32, {\n                    cache: \"default\",\n                })\n                    .then(function(response) {\n                        response.text()\n                            .then(function(responseText) {\n                                // Cached for 5 minutes at a time\n                                window.localStorage.setItem('OAAGGSUP', (Date.now() + 300000) + ':' + responseText);\n\n                                handleProfileDataForUserAvailable(responseText);\n                            })\n                            .catch(handleProfileDataForUserUnableToBeResolved);\n                    })\n                    .catch(handleProfileDataForUserUnableToBeResolved);\n            };\n\n            var handleProfileDataForUserAvailable = function(userDataString) {\n                // Make a workable object here\n                userSteamProfileData = JSON.parse(userDataString);\n\n                window[rootObjectName].awaitModulePrepared('Debug', function(userSteamProfileData) {\n                    window[rootObjectName].Debug.writeConsoleMessage('Current authenticated user object', 'SteamAuth', window[rootObjectName].Debug.LOG_LEVEL_INFO);\n                    window[rootObjectName].Debug.writeConsoleObject(userSteamProfileData, 'SteamAuth', window[rootObjectName].Debug.LOG_LEVEL_INFO);\n                }.bind(this, userSteamProfileData));\n\n                /**\n                 * @var {HTMLElement} $steamProfile\n                 */\n                var $steamProfile = document.getElementById('steamProfile');\n\n                // In the event this gets run again (Say we are testing, or someone puts something in there as a placeholder etc.) Clear out this element quickly\n                $steamProfile.innerHTML = '';\n\n                if (userSteamProfileData && userSteamProfileData.statusCode && (userSteamProfileData.statusCode === 404)) {\n                    window[rootObjectName].awaitModulePrepared('Debug', function() {\n                        window[rootObjectName].Debug.writeConsoleMessage('User was not able to be found in BottlePass server!', 'SteamAuth', window[rootObjectName].Debug.LOG_LEVEL_INFO);\n                    });\n\n                    // Tell the user to play and maybe link the steam workshop page here?\n                    var $OAADownloadLink = document.createElement('a');\n\n                    $OAADownloadLink.classList.add('OAADownloadLink');\n\n                    $OAADownloadLink.setAttribute('target', '_blank');\n                    $OAADownloadLink.setAttribute('href', 'https://steamcommunity.com/sharedfiles/filedetails/?id=881541807');\n                    $OAADownloadLink.innerHTML = 'Subscribe<br />to play';\n\n                    $steamProfile.appendChild($OAADownloadLink);\n                } else if (userSteamProfileData && userSteamProfileData.steamid && userSteamProfileData.profile) {\n                    window[rootObjectName].awaitModulePrepared('Debug', function() {\n                        window[rootObjectName].Debug.writeConsoleMessage('User found in BottlePass server!', 'SteamAuth', window[rootObjectName].Debug.LOG_LEVEL_INFO);\n                    });\n\n                    // Build the nav for your MMR\n                    var $nameContainer = document.createElement('div');\n                    var $unrankedMMR = document.createElement('div');\n                    var $rankedMMR = document.createElement('div');\n                    var $MMRContainer = document.createElement('div');\n\n                    var $unrankedMMRNumber = document.createElement('span');\n                    var $rankedMMRNumber = document.createElement('span');\n\n                    $nameContainer.innerHTML = userSteamProfileData.profile.name.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n\n                    $nameContainer.classList.add('SteamUserName');\n\n                    $unrankedMMRNumber.innerHTML = userSteamProfileData.unrankedMMR;\n                    $rankedMMRNumber.innerHTML = userSteamProfileData.rankedMMR;\n\n                    $unrankedMMRNumber.classList.add('OAAUnrankedMMRValue');\n                    $rankedMMRNumber.classList.add('OAARankedMMRValue');\n\n                    $unrankedMMR.classList.add('OAAUnrankedMMR');\n                    $rankedMMR.classList.add('OAARankedMMR');\n\n                    $MMRContainer.classList.add('OAAMMRValues');\n\n                    $unrankedMMR.appendChild($unrankedMMRNumber);\n                    $rankedMMR.appendChild($rankedMMRNumber);\n\n                    $MMRContainer.appendChild($unrankedMMR);\n                    $MMRContainer.appendChild($rankedMMR);\n\n                    $steamProfile.appendChild($nameContainer);\n                    $steamProfile.appendChild($MMRContainer);\n\n                    // Make their avatar available in layout?\n                    if (userSteamProfileData.profile.avatar) {\n                        var $userAvatar = document.createElement('img');\n\n                        $userAvatar.setAttribute('src', userSteamProfileData.profile.avatar);\n\n                        $userAvatar.classList.add('SteamUserAvatar');\n\n                        // Aside Avatar for the moment\n                        // $steamProfile.appendChild($userAvatar);\n                    }\n                } else {\n                    window[rootObjectName].awaitModulePrepared('Debug', function() {\n                        window[rootObjectName].Debug.writeConsoleMessage('User data appears corrupted?', 'SteamAuth', window[rootObjectName].Debug.LOG_LEVEL_INFO);\n                    });\n\n                    // TODO: Catch?\n                }\n\n                var steamAuthElements = document.querySelectorAll('.steamAuth');\n                var i = 0;\n                var j = steamAuthElements.length;\n\n                for (i; i < j; i++) {\n                    steamAuthElements[i].classList.remove('loading');\n                    steamAuthElements[i].classList.add('authenticated');\n                }\n\n                window[rootObjectName].awaitModulePrepared('Debug', function() {\n                    window[rootObjectName].Debug.writeConsoleMessage('Running onAuthenticated callbacks', 'SteamAuth', window[rootObjectName].Debug.LOG_LEVEL_INFO);\n                });\n\n                // Highlight any Steam32 segments we have in the DOM\n                var items = document.querySelectorAll('.OAAS32_' + window[rootObjectName].SteamAuth.currentUserSteam32);\n                i = 0;\n                j = items.length;\n\n                for (i; i < j; i++) {\n                    items[i].classList.add('OAA_currentSteamUser');\n                }\n\n                i = 0;\n                j = onAuthenticatedCallbacks.length;\n\n                for (i; i < j; i++) {\n                    window[rootObjectName].handleRunCallback(onAuthenticatedCallbacks[i]);\n                }\n            };\n\n            var handleProfileDataForUserUnableToBeResolved = function(error) {\n                window[rootObjectName].awaitModulePrepared('Debug', function(error) {\n                    window[rootObjectName].Debug.writeConsoleMessage('User profile data was unable to be fetched!', 'SteamAuth', window[rootObjectName].Debug.LOG_LEVEL_ERROR);\n                    window[rootObjectName].Debug.writeConsoleObject(error, 'SteamAuth', window[rootObjectName].Debug.LOG_LEVEL_ERROR);\n                }.bind(this, error));\n            };\n\n            var handleUpdateNavToRequiresAuthentication = function() {\n                window[rootObjectName].awaitModulePrepared('Debug', function() {\n                    window[rootObjectName].Debug.writeConsoleMessage('User is not currently authenticated', 'SteamAuth', window[rootObjectName].Debug.LOG_LEVEL_INFO);\n                });\n\n                var authButton = document.querySelector('body>nav .steamAuth');\n\n                authButton.classList.remove('loading');\n\n                window[rootObjectName].awaitModulePrepared('Debug', function() {\n                    window[rootObjectName].Debug.writeConsoleMessage('Bound interactions for nav button for authentication', 'SteamAuth', window[rootObjectName].Debug.LOG_LEVEL_INFO);\n                });\n            };\n\n            var handleFetchUserProfileData = function() {\n                // Cached for 1 week at a time\n                // TODO: Need to make a clear case for this information!\n                window.localStorage.setItem('OAAGGS64', (Date.now() + 604800000) + ':' + userSteam64);\n\n                handleUpdateNavToAuthenticated();\n            };\n\n            return {\n                __init: function() {\n                    window[rootObjectName].awaitModulePrepared('URL', function() {\n                        // TL`DR, this sets up a browser-side 'session' flow where the response can be read from the URL\n                        document.getElementById('steamAuth').setAttribute(\n                            'href',\n                            'https://steamcommunity.com/openid/login?' +\n                                'openid.claimed_id=' + encodeURIComponent('http://specs.openid.net/auth/2.0/identifier_select') + '&' +\n                                'openid.identity='   + encodeURIComponent('http://specs.openid.net/auth/2.0/identifier_select') + '&' +\n                                'openid.mode='       + encodeURIComponent('checkid_setup') +                                      '&' +\n                                'openid.ns='         + encodeURIComponent('http://specs.openid.net/auth/2.0') +                   '&' +\n                                'openid.realm='      + encodeURIComponent(window.location.origin) +                               '&' +\n                                'openid.return_to='  + encodeURIComponent(window.location.origin + window.location.pathname)\n                        );\n\n                        // FIRST, check to see if our LS store has a valid entry that has not expired (We are going to locally store the Steam64 for 1 week)\n                        try {\n                            var steamAuthChallenge = window.localStorage.getItem('OAAGGS64');\n\n                            // Do we have a valid and non-expired Steam64 in cache?\n                            if (!steamAuthChallenge || (steamAuthChallenge.indexOf(':') === -1)) {\n                                // Check our response URL...we might already have this data available\n                                var identity = window[rootObjectName].URL.searchParamValue('openid.identity');\n\n                                if (identity && (identity = identity.replace(/^https:\\/\\/steamcommunity.com\\/openid\\/id\\//, ''))) {\n                                    userSteam64 = identity;\n\n                                    handleFetchUserProfileData();\n                                } else {\n                                    handleUpdateNavToRequiresAuthentication();\n                                }\n                            } else {\n                                var steamAuthSet = steamAuthChallenge.split(':');\n\n                                if (Number(steamAuthSet[0]) > Date.now()) {\n                                    userSteam64 = steamAuthSet[1];\n\n                                    handleFetchUserProfileData();\n                                } else {\n                                    handleUpdateNavToRequiresAuthentication();\n                                }\n                            }\n                        } catch (e) {\n                            // TODO: Handle private browsing mode maybe?  IOS throws an exception here if we are in private browsing mode\n                        }\n                    });\n                }.bind(this),\n\n                registerOnAuthenticatedCallback: function(callback) {\n                    if (hasBeenAuthenticated) {\n                        window[rootObjectName].handleRunCallback(callback);\n                    } else {\n                        onAuthenticatedCallbacks.push(callback);\n                    }\n                }.bind(this),\n\n                get currentUserSteam32() {\n                    // Split the string into char arrays sop we can do the math manually (Doing the plan math will always fail...)\n                    var steam64chars     = userSteam64.split('').reverse();\n                    var steamTConstChars = '76561197960265728'.split('').reverse();\n                    var steam32Chars     = [];\n\n                    var i = 0;\n                    var j = steam64chars.length;\n\n                    var carry = false;\n                    var baseInt;\n                    var subtInt;\n                    var resultInt;\n\n                    // TODO: Maybe there is a case where the 64 is less than the translation constant?\n                    for (i; i < j; i++) {\n                        baseInt = Number(steam64chars[i]);\n                        subtInt = Number(steamTConstChars[i]);\n\n                        // Are we carrying a number from the last operation?\n                        if (carry) {\n                            baseInt = (baseInt - 1);\n                        }\n\n                        carry = false;\n\n                        resultInt = baseInt - subtInt;\n\n                        if (resultInt < 0) {\n                            resultInt = (resultInt + 10);\n\n                            carry = true;\n                        }\n\n                        steam32Chars.push(resultInt.toString());\n                    }\n\n                    return steam32Chars.reverse().join('').replace(/^[0]+/, '');\n                },\n\n                get currentUserSteam64() {\n                    return userSteam64;\n                },\n            };\n        }());\n\n        window[rootObjectName].modulePrepared('SteamAuth');\n        window[rootObjectName].moduleReady(window[rootObjectName].SteamAuth.__init);\n    });\n}());\n"]}