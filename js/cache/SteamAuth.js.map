{"version":3,"sources":["SteamAuth.js"],"names":["rootObjectName","window","__GRN","ready","SteamAuth","userSteam64","onAuthenticatedCallbacks","hasBeenAuthenticated","handleUpdateNavToRequiresAuthentication","awaitModulePrepared","Debug","writeConsoleMessage","LOG_LEVEL_INFO","document","querySelector","classList","remove","handleFetchUserProfileData","localStorage","setItem","Date","now","__init","getElementById","setAttribute","encodeURIComponent","location","origin","pathname","steamAuthChallenge","getItem","indexOf","identity","URL","searchParamValue","replace","steamAuthSet","split","e","bind","this","registerOnAuthenticatedCallback","callback","handleRunCallback","push","currentUserSteam32","currentUserSteam64","modulePrepared","moduleReady"],"mappings":"CAAE,WACE,IAAIA,EAAiBC,OAAOC,MAE5BD,OAAOD,GAAgBG,MAAM,WACzBF,OAAOD,GAAgBI,UAAa,WAChC,IAAIC,EAA2B,EAE3BC,KACAC,GAA2B,EA2B3BC,EAA0C,WAC1CP,OAAOD,GAAgBS,oBAAoB,QAAS,WAChDR,OAAOD,GAAgBU,MAAMC,oBAAoB,sCAAuC,YAAaV,OAAOD,GAAgBU,MAAME,kBAGrHC,SAASC,cAAc,uBAE7BC,UAAUC,OAAO,WAE5Bf,OAAOD,GAAgBS,oBAAoB,QAAS,WAChDR,OAAOD,GAAgBU,MAAMC,oBAAoB,uDAAwD,YAAaV,OAAOD,GAAgBU,MAAME,mBAIvJK,EAA6B,WAC7BhB,OAAOiB,aAAaC,QAAQ,WAAaC,KAAKC,MAAQ,OAAa,IAAMhB,IAK7E,OACIiB,OAAQ,WACJrB,OAAOD,GAAgBS,oBAAoB,MAAO,WAE9CI,SAASU,eAAe,aAAaC,aACjC,OACA,6DAC2BC,mBAAmB,sDAAwD,oBAC3EA,mBAAmB,sDAAwD,gBAC3EA,mBAAmB,iBAAwD,cAC3EA,mBAAmB,oCAAwD,iBAC3EA,mBAAmBxB,OAAOyB,SAASC,QAAwC,qBAC3EF,mBAAmBxB,OAAOyB,SAASC,OAAS1B,OAAOyB,SAASE,WAI3F,IACI,IAAIC,EAAqB5B,OAAOiB,aAAaY,QAAQ,YAGrD,IAAKD,IAAwBA,EAAmBE,QAAQ,MAAQ,EAAI,CAEhE,IAAIC,EAAW/B,OAAOD,GAAgBiC,IAAIC,iBAAiB,mBAEvDF,IAAaA,EAAWA,EAASG,QAAQ,8CAA+C,MACxF9B,EAAc2B,EAEdf,KAEAT,QAED,CACH,IAAI4B,EAAeP,EAAmBQ,MAAM,KAExCD,EAAa,GAAKhB,KAAKC,OACvBhB,EAAc+B,EAAa,GAE3B5B,KAEAS,KAGV,MAAOqB,QAIfC,KAAKC,MAEPC,gCAAiC,SAASC,GAClCnC,EACAN,OAAOD,GAAgB2C,kBAAkBD,GAEzCpC,EAAyBsC,KAAKF,IAEpCH,KAAKC,MAEPK,yBACI,OAAO,GAGXC,yBACI,OAAO,IAhHgB,GAqHnC7C,OAAOD,GAAgB+C,eAAe,aACtC9C,OAAOD,GAAgBgD,YAAY/C,OAAOD,GAAgBI,UAAUkB,UA1H3E","file":"SteamAuth.js","sourcesContent":["!(function() {\n    var rootObjectName = window.__GRN;\n\n    window[rootObjectName].ready(function() {\n        window[rootObjectName].SteamAuth = (function () {\n            var userSteam64              = 0;\n            var userSteamProfileData     = null;\n            var onAuthenticatedCallbacks = [];\n            var hasBeenAuthenticated     = false;\n\n            var handleUpdateNavToAuthenticated = function(steam64) {\n                if (!steam64) {\n                    handleUpdateNavToRequiresAuthentication();\n                }\n\n                window[rootObjectName].awaitModulePrepared('Debug', function() {\n                    window[rootObjectName].Debug.writeConsoleMessage('User is currently authenticated', 'SteamAuth', window[rootObjectName].Debug.LOG_LEVEL_INFO);\n                });\n\n                hasBeenAuthenticated = true;\n\n                window[rootObjectName].awaitModulePrepared('Debug', function() {\n                    window[rootObjectName].Debug.writeConsoleMessage('Running onAuthenticated callbacks', 'SteamAuth', window[rootObjectName].Debug.LOG_LEVEL_INFO);\n                });\n\n                var i = 0;\n                var j = onAuthenticatedCallbacks.length;\n\n                for (i; i < j; i++) {\n                    window[rootObjectName].handleRunCallback(onAuthenticatedCallbacks[i]);\n                }\n\n                // TODO: Build the profile display for the user and do highlighting in the DOM!\n            };\n\n            var handleUpdateNavToRequiresAuthentication = function() {\n                window[rootObjectName].awaitModulePrepared('Debug', function() {\n                    window[rootObjectName].Debug.writeConsoleMessage('User is not currently authenticated', 'SteamAuth', window[rootObjectName].Debug.LOG_LEVEL_INFO);\n                });\n\n                var authButton = document.querySelector('body>nav .steamAuth');\n\n                authButton.classList.remove('loading');\n\n                window[rootObjectName].awaitModulePrepared('Debug', function() {\n                    window[rootObjectName].Debug.writeConsoleMessage('Bound interactions for nav button for authentication', 'SteamAuth', window[rootObjectName].Debug.LOG_LEVEL_INFO);\n                });\n            };\n\n            var handleFetchUserProfileData = function() {\n                window.localStorage.setItem('OAAGGS64', (Date.now() + 604800000) + ':' + userSteam64);\n\n                // TODO: Check local cache and either use what is there if it exists and is valid, or fetch a new set of data\n            };\n\n            return {\n                __init: function() {\n                    window[rootObjectName].awaitModulePrepared('URL', function() {\n                        // TL`DR, this sets up a browser-side 'session' flow where the response can be read from the URL\n                        document.getElementById('steamAuth').setAttribute(\n                            'href',\n                            'https://steamcommunity.com/openid/login?' +\n                                'openid.claimed_id=' + encodeURIComponent('http://specs.openid.net/auth/2.0/identifier_select') + '&' +\n                                'openid.identity='   + encodeURIComponent('http://specs.openid.net/auth/2.0/identifier_select') + '&' +\n                                'openid.mode='       + encodeURIComponent('checkid_setup') +                                      '&' +\n                                'openid.ns='         + encodeURIComponent('http://specs.openid.net/auth/2.0') +                   '&' +\n                                'openid.realm='      + encodeURIComponent(window.location.origin) +                               '&' +\n                                'openid.return_to='  + encodeURIComponent(window.location.origin + window.location.pathname)\n                        );\n\n                        // FIRST, check to see if our LS store has a valid entry that has not expired (We are going to locally store the Steam64 for 1 week)\n                        try {\n                            var steamAuthChallenge = window.localStorage.getItem('OAAGGS64');\n\n                            // Do we have a valid and non-expired Steam64 in cache?\n                            if (!steamAuthChallenge || (!steamAuthChallenge.indexOf(':') > -1)) {\n                                // Check our response URL...we might already have this data available\n                                var identity = window[rootObjectName].URL.searchParamValue('openid.identity');\n\n                                if (identity && (identity = identity.replace(/^https:\\/\\/steamcommunity.com\\/openid\\/id\\//, ''))) {\n                                    userSteam64 = identity;\n\n                                    handleFetchUserProfileData();\n                                } else {\n                                    handleUpdateNavToRequiresAuthentication();\n                                }\n                            } else {\n                                var steamAuthSet = steamAuthChallenge.split(':');\n\n                                if (steamAuthSet[0] < Date.now()) {\n                                    userSteam64 = steamAuthSet[1];\n\n                                    handleUpdateNavToRequiresAuthentication();\n                                } else {\n                                    handleFetchUserProfileData();\n                                }\n                            }\n                        } catch (e) {\n                            // TODO: Handle private browsing mode maybe?  IOS throws an exception here if we are in private browsing mode\n                        }\n                    });\n                }.bind(this),\n\n                registerOnAuthenticatedCallback: function(callback) {\n                    if (hasBeenAuthenticated) {\n                        window[rootObjectName].handleRunCallback(callback);\n                    } else {\n                        onAuthenticatedCallbacks.push(callback);\n                    }\n                }.bind(this),\n\n                get currentUserSteam32() {\n                    return 0;\n                },\n\n                get currentUserSteam64() {\n                    return 0;\n                },\n            };\n        }());\n\n        window[rootObjectName].modulePrepared('SteamAuth');\n        window[rootObjectName].moduleReady(window[rootObjectName].SteamAuth.__init);\n    });\n}());\n"]}