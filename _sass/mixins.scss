/**
 * Generates a cross-platform backface-visibility rule
 *
 * @param <CSSValueString> $visibility - The CSS value string to make cross-platform
 */
@mixin backface-visibility($visibility) {
  -webkit-backface-visibility: $visibility;
  backface-visibility:         $visibility;
}

/**
 * Generates a cross-platform transform rule
 *
 * @param <CSSValueString> $transformation - The CSS value string to make cross-platform
 * @param <false|bool>     $important      - True if the !important modifier is to be applied to the rule.  USE WITH CAUTION
 */
@mixin transform($transformation, $important: false) {
  @if ($important == true) {
    -webkit-transform: $transformation !important;
    transform:         $transformation !important;
  } @else {
    -webkit-transform: $transformation;
    transform:         $transformation;
  }
}

/**
 * Generates a cross-platform rotate rule
 *
 * @param <Integer> $deg - The Integer value degrees to rotate
 */
@mixin rotate($deg) {
  @include transform(rotate(#{$deg}deg));
}

/**
 * Generates a cross-platform scale rule
 *
 * @param <CSSValueString> $scale - The CSS value string to scale on
 */
@mixin scale($scale) {
  @include transform(scale($scale));
}

/**
 * Generates a cross-platform translate rule
 *
 * @param <CSSValueString> $x - The CSS value string X translation distance (relative to parent sizing for non-absolute values)
 * @param <CSSValueString> $y - The CSS value string Y translation distance (relative to parent sizing for non-absolute values)
 */
@mixin translate($x, $y) {
  @include transform(translate($x, $y));
}

/**
 * Generates a cross-platform skew rule
 *
 * @param <Integer> $x - The integer X skew degrees
 * @param <Integer> $y - The integer Y skew degrees
 */
@mixin skew($x, $y) {
  @include transform(skew(#{$x}deg, #{$y}deg));
}

/**
 * Generates a cross-platform transform origin rule
 *
 * @param <CSSValueString> $origin - The value string origin to set the transformation origin to
 */
@mixin transform-origin($origin) {
  -webkit-transform-origin: $origin;
  transform-origin:         $origin;
}

/**
 * Generates a cross-platform skew rule
 *
 * @param <Integer> $x - The integer X skew degrees
 * @param <Integer> $y - The integer Y skew degrees
 */
@mixin animation($animation) {
  -webkit-animation: $animation;
  animation:         $animation;
}

/**
 * Generates a cross-platform animation keyframe set
 *     Keyframes are generated by the body content of the mixin
 *
 * @param <String> $animationName - The string animation name to generate keyframes for
 *
 * @content
 */
@mixin generateKeyframes($animationName) {
  @-webkit-keyframes #{$animationName} {
    @content;
  }
  @keyframes #{$animationName} {
    @content;
  }
}

/**
 * Magic extensible selector to make items transitionable
 */
%transitionable {
  transition: .4s ease-out;
}
